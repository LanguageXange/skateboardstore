{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cindy\\\\Desktop\\\\ecommerce\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { setCurrentUser } from \"./redux/user/user.action\"; // adding action creator function , which simply returns the action object\n\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-up/sign-in-up.component\";\nimport Header from \"./components/header/header.component\";\nimport { auth, createUserProfile, addCollectionAndDocument } from \"./firebase/firebase.utils\";\nimport { createStructuredSelector } from \"reselect\";\nimport { CurrentUserSelector } from \"./redux/user/user.selector\";\nimport { CollectionPreviewSelector } from \"./redux/shop/shop.selectors\"; // add connect & dispatch in app.js so we can remove constructor super and this.state\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  // we don't want to remount the component\n  // we just want the app to know that authentication state changes\n  // onAuthStateChanged is a firebase method\n  // userAuth is null when users sign out : setting by Firebase i guess\n  // Lesson-10 Titled: Storing User Data in App - review , a bit complicated\n  // TypeError - onSnapshot of undefined?? => solution delete collection sometimes work? delete users in authentication\n  componentDidMount() {\n    const {\n      setCurrentUser,\n      collectionsArray\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfile(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else {\n        // if user signs out userAuth will be null\n        setCurrentUser(userAuth); // we only want to return title and items from the collectionsArray\n        // we are moving data from local machine to firebase\n        // only call it once and then delete the addCollectionAndDocument otherwise you will see a lot of items in collections\n        // addCollectionAndDocument(\n        //   \"collections\",\n        //   collectionsArray.map(({ title, items }) => ({ title, items }))\n        // );\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: CurrentUserSelector,\n  collectionsArray: CollectionPreviewSelector\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // only the HomePage, ShopPage component has access to that specific Route props\n// place the Header Component outside of the Switch! so it will appear across the pages!\n// redirect users once they sign in, so we need the state, & redirect fromo react-router-dom\n// change to route from component to render\n// DEBUG SUCCESS: remove exact for the shopPage otherwise /shop/:categoryId will NEVER BE RENDERED","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/App.js"],"names":["React","Switch","Route","Redirect","connect","setCurrentUser","Homepage","ShopPage","CheckoutPage","SignInAndSignUpPage","Header","auth","createUserProfile","addCollectionAndDocument","createStructuredSelector","CurrentUserSelector","CollectionPreviewSelector","App","Component","unsubscribeFromAuth","componentDidMount","collectionsArray","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { setCurrentUser } from \"./redux/user/user.action\";\n// adding action creator function , which simply returns the action object\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-up/sign-in-up.component\";\nimport Header from \"./components/header/header.component\";\nimport {\n  auth,\n  createUserProfile,\n  addCollectionAndDocument,\n} from \"./firebase/firebase.utils\";\n\nimport { createStructuredSelector } from \"reselect\";\nimport { CurrentUserSelector } from \"./redux/user/user.selector\";\nimport { CollectionPreviewSelector } from \"./redux/shop/shop.selectors\";\n\n// add connect & dispatch in app.js so we can remove constructor super and this.state\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n  // we don't want to remount the component\n  // we just want the app to know that authentication state changes\n  // onAuthStateChanged is a firebase method\n  // userAuth is null when users sign out : setting by Firebase i guess\n  // Lesson-10 Titled: Storing User Data in App - review , a bit complicated\n  // TypeError - onSnapshot of undefined?? => solution delete collection sometimes work? delete users in authentication\n  componentDidMount() {\n    const { setCurrentUser, collectionsArray } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfile(userAuth);\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      } else {\n        // if user signs out userAuth will be null\n        setCurrentUser(userAuth);\n        // we only want to return title and items from the collectionsArray\n        // we are moving data from local machine to firebase\n        // only call it once and then delete the addCollectionAndDocument otherwise you will see a lot of items in collections\n\n        // addCollectionAndDocument(\n        //   \"collections\",\n        //   collectionsArray.map(({ title, items }) => ({ title, items }))\n        // );\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <SignInAndSignUpPage />\n              )\n            }\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: CurrentUserSelector,\n  collectionsArray: CollectionPreviewSelector,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// only the HomePage, ShopPage component has access to that specific Route props\n// place the Header Component outside of the Switch! so it will appear across the pages!\n// redirect users once they sign in, so we need the state, & redirect fromo react-router-dom\n// change to route from component to render\n\n// DEBUG SUCCESS: remove exact for the shopPage otherwise /shop/:categoryId will NEVER BE RENDERED\n"]},"metadata":{},"sourceType":"module"}