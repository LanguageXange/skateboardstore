{"ast":null,"code":"import ShopActionTypes from \"./shop.types\"; //import { firestore, convertSnapShotToMap } from \"../../firebase/firebase.utils\";\n// action creator is simply a function that returns an object!\n// export const updateCollection = (collectionsMap) => ({\n//   type: ShopActionTypes.UPDATE_COLLECTIONS,\n//   payload: collectionsMap,\n// });\n\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionFail = errMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAIL,\n  payload: errMessage\n}); // redux thunk: write a function that returns a function\n// introducing saga to replace redux thunk\n// export const fetchCollectionStartAsync = () => {\n//   return (dispatch) => {\n//     const collectionRef = firestore.collection(\"collections\");\n//     dispatch(fetchCollectionStart());\n//     collectionRef\n//       .get()\n//       .then((snapshot) => {\n//         const collectionMap = convertSnapShotToMap(snapshot);\n//         dispatch(fetchCollectionSuccess(collectionMap));\n//       })\n//       .catch((err) => dispatch(fetchCollectionFail(err.message)));\n//   };\n// };","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFail","errMessage","FETCH_COLLECTIONS_FAIL"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADmB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,aAAD,KAAoB;AACxDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAApB,CAA/B;AAIP,OAAO,MAAMG,mBAAmB,GAAIC,UAAD,KAAiB;AAClDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,sBAD4B;AAElDH,EAAAA,OAAO,EAAEE;AAFyC,CAAjB,CAA5B,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\n//import { firestore, convertSnapShotToMap } from \"../../firebase/firebase.utils\";\r\n// action creator is simply a function that returns an object!\r\n// export const updateCollection = (collectionsMap) => ({\r\n//   type: ShopActionTypes.UPDATE_COLLECTIONS,\r\n//   payload: collectionsMap,\r\n// });\r\n\r\nexport const fetchCollectionStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionSuccess = (collectionMap) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionMap,\r\n});\r\nexport const fetchCollectionFail = (errMessage) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAIL,\r\n  payload: errMessage,\r\n});\r\n\r\n// redux thunk: write a function that returns a function\r\n// introducing saga to replace redux thunk\r\n// export const fetchCollectionStartAsync = () => {\r\n//   return (dispatch) => {\r\n//     const collectionRef = firestore.collection(\"collections\");\r\n//     dispatch(fetchCollectionStart());\r\n//     collectionRef\r\n//       .get()\r\n//       .then((snapshot) => {\r\n//         const collectionMap = convertSnapShotToMap(snapshot);\r\n//         dispatch(fetchCollectionSuccess(collectionMap));\r\n//       })\r\n//       .catch((err) => dispatch(fetchCollectionFail(err.message)));\r\n//   };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}