{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\"; // logger is a middleware for debugging\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./root-reducer\";\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n} // only want logging in dev mode not in production mode\n\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares)); // spread the array of middlewares so that in the future just add more stuff into the middlewares array\n\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","thunk","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,WAAW,GAAG,CAACF,KAAD,CAApB;;AAEA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBP,MAAjB;AACD,C,CACD;;;AAEA,MAAMQ,KAAK,GAAGX,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGK,WAAJ,CAA7B,CAAzB,C,CACA;;AAEA,MAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBC,SAAhB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport logger from \"redux-logger\";\r\n// logger is a middleware for debugging\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n// only want logging in dev mode not in production mode\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n// spread the array of middlewares so that in the future just add more stuff into the middlewares array\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}