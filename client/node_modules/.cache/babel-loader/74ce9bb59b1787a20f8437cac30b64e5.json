{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cindy\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ReactComponent as CartLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport { ToggleCartHidden } from \"../../redux/cart/cart.action\";\nimport { CartItemCountSelector } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport \"./cart-icon.styles.scss\";\n\nconst CartItem = ({\n  toggleCartHidden,\n  itemQuantity\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CartLogo, {\n  className: \"shopping-icon\",\n  onClick: () => toggleCartHidden(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"item-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, itemQuantity));\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(ToggleCartHidden())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  itemQuantity: CartItemCountSelector\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItem); // Review Selectors in Redux Course\n// essentially mapStateToProps will be called every time the reducer is called\n// and the state always return a new object\n// which is a performance issue!!!\n// so we need memoization and the reselect library\n// will not re-render a component if the state value doesn't change","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","ToggleCartHidden","CartItemCountSelector","createStructuredSelector","CartItem","toggleCartHidden","itemQuantity","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAO,yBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAD,kBACf;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,SAAS,EAAC,eAApB;AAAoC,EAAA,OAAO,EAAE,MAAMD,gBAAgB,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE;AAAM,EAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8BC,YAA9B,CAFF,CADF;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCH,EAAAA,gBAAgB,EAAE,MAAMG,QAAQ,CAACP,gBAAgB,EAAjB;AADQ,CAAf,CAA3B;;AAIA,MAAMQ,eAAe,GAAGN,wBAAwB,CAAC;AAC/CG,EAAAA,YAAY,EAAEJ;AADiC,CAAD,CAAhD;AAIA,eAAeF,OAAO,CAACS,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CH,QAA7C,CAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ReactComponent as CartLogo } from \"../../assets/shopping-bag.svg\";\r\nimport { ToggleCartHidden } from \"../../redux/cart/cart.action\";\r\n\r\nimport { CartItemCountSelector } from \"../../redux/cart/cart.selectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport \"./cart-icon.styles.scss\";\r\n\r\nconst CartItem = ({ toggleCartHidden, itemQuantity }) => (\r\n  <div className=\"cart-icon\">\r\n    <CartLogo className=\"shopping-icon\" onClick={() => toggleCartHidden()} />\r\n    <span className=\"item-count\">{itemQuantity}</span>\r\n  </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleCartHidden: () => dispatch(ToggleCartHidden()),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  itemQuantity: CartItemCountSelector,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItem);\r\n\r\n// Review Selectors in Redux Course\r\n// essentially mapStateToProps will be called every time the reducer is called\r\n// and the state always return a new object\r\n// which is a performance issue!!!\r\n// so we need memoization and the reselect library\r\n// will not re-render a component if the state value doesn't change\r\n"]},"metadata":{},"sourceType":"module"}