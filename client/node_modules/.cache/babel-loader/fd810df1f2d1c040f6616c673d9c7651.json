{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.type\";\nimport { auth, googleProvider, createUserProfile } from \"../../firebase/firebase.utils\";\nimport { SigninSuccess, SigninFailure } from \"./user.action\"; // ALSO UPDATE THE FIREBASE.UTILS.JS FILE\n// ANY CODE THAT CALLS API COULD FAIL SO REMEMBER TO PUT IT INSIDE TRY CATCH BLOCK\n\nexport function* googleSignIn() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); //console.log(userRef.user);\n\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(SigninFailure(err.message));\n  }\n}\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(SigninFailure(err.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfile","SigninSuccess","SigninFailure","googleSignIn","user","signInWithPopup","userRef","userSnapshot","get","id","data","err","message","emailSignIn","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,iBAHF,QAIO,+BAJP;AAKA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C,C,CAEA;AACA;;AAEA,OAAO,UAAUC,YAAV,GAAyB;AAC9B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB,CADE,CAEF;;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,iBAAD,EAAoBI,IAApB,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,GAAG,CAACC,OAAL,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAtB,EAAwD;AAC7D,MAAI;AACF,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMV,OAAO,GAAG,MAAMV,IAAI,CAACI,iBAAD,EAAoBI,IAApB,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,GAAG,CAACC,OAAL,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAMzB,UAAU,CAACI,eAAe,CAACsB,oBAAjB,EAAuChB,YAAvC,CAAhB;AACD;AAED,OAAO,UAAUiB,kBAAV,GAA+B;AACpC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,mBAAjB,EAAsCR,WAAtC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACsB,mBAAD,CAAL,EAA4BtB,IAAI,CAACwB,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.type\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfile,\r\n} from \"../../firebase/firebase.utils\";\r\nimport { SigninSuccess, SigninFailure } from \"./user.action\";\r\n\r\n// ALSO UPDATE THE FIREBASE.UTILS.JS FILE\r\n// ANY CODE THAT CALLS API COULD FAIL SO REMEMBER TO PUT IT INSIDE TRY CATCH BLOCK\r\n\r\nexport function* googleSignIn() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    //console.log(userRef.user);\r\n    const userRef = yield call(createUserProfile, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(SigninSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (err) {\r\n    yield put(SigninFailure(err.message));\r\n  }\r\n}\r\n\r\nexport function* emailSignIn({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    const userRef = yield call(createUserProfile, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(SigninSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (err) {\r\n    yield put(SigninFailure(err.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}