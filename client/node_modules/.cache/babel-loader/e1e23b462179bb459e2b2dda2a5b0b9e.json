{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cindy\\\\Desktop\\\\ecommerce\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport \"./App.css\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-up/sign-in-up.component\";\nimport { auth, createUserProfile } from \"./firebase/firebase.utils\"; // dummy page for route practice\n\nconst Skateboard = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 26\n  }\n}, \"Skateboard...\");\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  // we don't want to remount the component\n  // we just want the app to know that authentication state changes\n  // onAuthStateChanged is a firebase method\n  // userAuth is null when users sign out : setting by Firebase i guess\n  // Lesson-10 Titled: Storing User Data in App - review , a bit complicated\n  // TypeError - onSnapshot of undefined?? => solution simple delete collection\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfile(userAuth); //remember the last line of the createUserProfile function in firebase.utils return userRef which is a document reference\n        // notice that setState is asynchronous so don't put console.log after setState\n        // instead create a call back function as second param in the setState\n\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n          console.log(this.state);\n        });\n      } else {\n        // if user signs out userAuth will be null\n        this.setState({\n          currentUser: userAuth\n        });\n      } //console.log(userAuth);\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/skateboard\",\n      component: Skateboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App; // only the HomePage, ShopPage component has access to that specific Route props\n// place the Header Component outside of the Switch! so it will appear across the pages!","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/App.js"],"names":["React","Switch","Route","Homepage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfile","Skateboard","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","console","log","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,yCAAhC;AACA,SAASC,IAAT,EAAeC,iBAAf,QAAwC,2BAAxC,C,CAEA;;AACA,MAAMC,UAAU,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAzB;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAQdC,mBARc,GAQQ,IARR;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAGD;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,mBAAL,GAA2BN,IAAI,CAACU,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AACrE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMX,iBAAiB,CAACU,QAAD,CAAvC,CADY,CAEZ;AACA;AACA;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAoBC,QAAD,IAAc;AAC/B,eAAKC,QAAL,CAAc;AACZP,YAAAA,WAAW,EAAE;AACXQ,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADF;AAEX,iBAAGF,QAAQ,CAACG,IAAT;AAFQ;AADD,WAAd;AAMAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACD,SARD;AASD,OAdD,MAcO;AACL;AACA,aAAKQ,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAEG;AAAf,SAAd;AACD,OAlBoE,CAoBrE;;AACD,KArB0B,CAA3B;AAsBD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEZ,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgC,MAAA,SAAS,EAAEK,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEH,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAWD;;AAzD+B;;AA4DlC,eAAeI,GAAf,C,CACA;AACA","sourcesContent":["import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport \"./App.css\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-up/sign-in-up.component\";\nimport { auth, createUserProfile } from \"./firebase/firebase.utils\";\n\n// dummy page for route practice\nconst Skateboard = () => <div>Skateboard...</div>;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  unsubscribeFromAuth = null;\n  // we don't want to remount the component\n  // we just want the app to know that authentication state changes\n  // onAuthStateChanged is a firebase method\n  // userAuth is null when users sign out : setting by Firebase i guess\n  // Lesson-10 Titled: Storing User Data in App - review , a bit complicated\n  // TypeError - onSnapshot of undefined?? => solution simple delete collection\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfile(userAuth);\n        //remember the last line of the createUserProfile function in firebase.utils return userRef which is a document reference\n        // notice that setState is asynchronous so don't put console.log after setState\n        // instead create a call back function as second param in the setState\n        userRef.onSnapshot((snapShot) => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data(),\n            },\n          });\n          console.log(this.state);\n        });\n      } else {\n        // if user signs out userAuth will be null\n        this.setState({ currentUser: userAuth });\n      }\n\n      //console.log(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <>\n        <Header currentUser={this.state.currentUser} />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route exact path=\"/shop\" component={ShopPage} />\n          <Route exact path=\"/skateboard\" component={Skateboard} />\n          <Route exact path=\"/signin\" component={SignInAndSignUpPage} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n// only the HomePage, ShopPage component has access to that specific Route props\n// place the Header Component outside of the Switch! so it will appear across the pages!\n"]},"metadata":{},"sourceType":"module"}