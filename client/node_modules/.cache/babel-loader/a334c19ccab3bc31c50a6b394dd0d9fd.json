{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cindy\\\\Desktop\\\\ecommerce\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CategoryPage from \"../category/category.component\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { firestore, convertSnapShotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollection } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionOverviewSpinner = WithSpinner(CollectionOverview);\nconst CategoryPageSpinner = WithSpinner(CategoryPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    // destructure updatecollection from the mapDispatchToProps\n    const {\n      updateCollection\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      console.log(snapshot, \"snap \");\n      const collectionMap = convertSnapShotToMap(snapshot);\n      console.log(collectionMap, \"collectionMap after reduce\");\n      updateCollection(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: match.path,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      render: props => /*#__PURE__*/React.createElement(CategoryPageSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: collection => dispatch(updateCollection(collection))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage); // TODO: DEBUG- WHEN I TYPE /shop/skateboard in the console.log it doesn't show up!!??\n// move the state to redux\n// switch to functional component\n// move ollections.map into its own child component so that we can have different categories\n// url will be localhost:3000/shop/:category\n// build a new category page\n// dynamically render the category page\n// e.g show the longboard but not other stuff\n// in App.js remember to remove 'exact' for  <Route path=\"/shop\" component={ShopPage} />\n// Migrate data to firebase\n// turn this component from functional to class component\n//BEFORE SPINNER\n//<Route exact path={match.path} component={CollectionOverview} />\n//<Route path={`${match.path}/:categoryId`} component={CategoryPage} />","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","CategoryPage","CollectionOverview","firestore","convertSnapShotToMap","connect","updateCollection","WithSpinner","CollectionOverviewSpinner","CategoryPageSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","console","log","collectionMap","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,SAASC,SAAT,EAAoBC,oBAApB,QAAgD,+BAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACL,kBAAD,CAA7C;AACA,MAAMO,mBAAmB,GAAGF,WAAW,CAACN,YAAD,CAAvC;;AAEA,MAAMS,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAI/BY,KAJ+B,GAIvB;AACNC,MAAAA,OAAO,EAAE;AADH,KAJuB;AAAA,SAQ/BC,uBAR+B,GAQL,IARK;AAAA;;AAU/BC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAM;AAAER,MAAAA;AAAF,QAAuB,KAAKS,KAAlC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAC7B,MAAOC,QAAP,IAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,OAAtB;AACA,YAAMG,aAAa,GAAGlB,oBAAoB,CAACe,QAAD,CAA1C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ,EAA2B,4BAA3B;AACAhB,MAAAA,gBAAgB,CAACgB,aAAD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAP4B,CAA/B;AASD;;AAEDY,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAEe,KAAK,CAACC,IAFd;AAGE,MAAA,MAAM,EAAGZ,KAAD,iBACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,cADtB;AAEE,MAAA,MAAM,EAAGZ,KAAD,iBACN,oBAAC,mBAAD;AAAqB,QAAA,SAAS,EAAEH;AAAhC,SAA6CG,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA/C8B;;AAkDjC,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,gBAAgB,EAAGW,UAAD,IAAgBY,QAAQ,CAACvB,gBAAgB,CAACW,UAAD,CAAjB;AADF,CAAf,CAA3B;;AAIA,eAAeZ,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkClB,QAAlC,CAAf,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CategoryPage from \"../category/category.component\";\r\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport { firestore, convertSnapShotToMap } from \"../../firebase/firebase.utils\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCollection } from \"../../redux/shop/shop.actions\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionOverviewSpinner = WithSpinner(CollectionOverview);\r\nconst CategoryPageSpinner = WithSpinner(CategoryPage);\r\n\r\nclass ShopPage extends Component {\r\n  // if we only need state , we don't have to write constructor super\r\n  // under the hood, if react sees the class component and state, it'll pull constructor for us\r\n  // short hand way\r\n  state = {\r\n    loading: true,\r\n  };\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    // destructure updatecollection from the mapDispatchToProps\r\n    const { updateCollection } = this.props;\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\r\n      async (snapshot) => {\r\n        console.log(snapshot, \"snap \");\r\n        const collectionMap = convertSnapShotToMap(snapshot);\r\n        console.log(collectionMap, \"collectionMap after reduce\");\r\n        updateCollection(collectionMap);\r\n        this.setState({ loading: false });\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={match.path}\r\n          render={(props) => (\r\n            <CollectionOverviewSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:categoryId`}\r\n          render={(props) => (\r\n            <CategoryPageSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollection: (collection) => dispatch(updateCollection(collection)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n\r\n// TODO: DEBUG- WHEN I TYPE /shop/skateboard in the console.log it doesn't show up!!??\r\n\r\n// move the state to redux\r\n// switch to functional component\r\n// move ollections.map into its own child component so that we can have different categories\r\n// url will be localhost:3000/shop/:category\r\n\r\n// build a new category page\r\n// dynamically render the category page\r\n// e.g show the longboard but not other stuff\r\n// in App.js remember to remove 'exact' for  <Route path=\"/shop\" component={ShopPage} />\r\n\r\n// Migrate data to firebase\r\n// turn this component from functional to class component\r\n\r\n//BEFORE SPINNER\r\n//<Route exact path={match.path} component={CollectionOverview} />\r\n//<Route path={`${match.path}/:categoryId`} component={CategoryPage} />\r\n"]},"metadata":{},"sourceType":"module"}