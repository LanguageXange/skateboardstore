{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cindy\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\directory\\\\directory.component.jsx\";\nimport React from \"react\";\nimport \"./directory.styles.scss\";\nimport MenuItem from \"../menu-item/menu-item.component\";\nimport { connect } from \"react-redux\";\nimport sectionsSelector from \"../../redux/directory/directory.selector\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst Directory = ({\n  sections\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"navbar-menu\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, sections.map(({\n  id,\n  ...allOtherProps\n}) => /*#__PURE__*/React.createElement(MenuItem, Object.assign({\n  key: id\n}, allOtherProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}))));\n\nconst mapStateToProps = createStructuredSelector({\n  sections: sectionsSelector\n}); // you can also write like this w/o createstructuredSelector\n// const mapStateToProps2 = (state) => ({\n//   sections: sectionsSelector(state),\n// });\n\nexport default connect(mapStateToProps)(Directory); // spread the props instead of doing it verbosely\n// previously directory component contains state, but i've moved it to redux\n// refactor this component to a functional component","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/components/directory/directory.component.jsx"],"names":["React","MenuItem","connect","sectionsSelector","createStructuredSelector","Directory","sections","map","id","allOtherProps","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,SAASC,wBAAT,QAAyC,UAAzC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAChB;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,QAAQ,CAACC,GAAT,CAAa,CAAC;AAAEC,EAAAA,EAAF;AAAM,KAAGC;AAAT,CAAD,kBACZ,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAED;AAAf,GAAuBC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADD,CADH,CADF;;AAQA,MAAMC,eAAe,GAAGN,wBAAwB,CAAC;AAC/CE,EAAAA,QAAQ,EAAEH;AADqC,CAAD,CAAhD,C,CAGA;AACA;AACA;AACA;;AAEA,eAAeD,OAAO,CAACQ,eAAD,CAAP,CAAyBL,SAAzB,CAAf,C,CACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport \"./directory.styles.scss\";\r\nimport MenuItem from \"../menu-item/menu-item.component\";\r\nimport { connect } from \"react-redux\";\r\nimport sectionsSelector from \"../../redux/directory/directory.selector\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nconst Directory = ({ sections }) => (\r\n  <div className=\"navbar-menu\">\r\n    {sections.map(({ id, ...allOtherProps }) => (\r\n      <MenuItem key={id} {...allOtherProps} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  sections: sectionsSelector,\r\n});\r\n// you can also write like this w/o createstructuredSelector\r\n// const mapStateToProps2 = (state) => ({\r\n//   sections: sectionsSelector(state),\r\n// });\r\n\r\nexport default connect(mapStateToProps)(Directory);\r\n// spread the props instead of doing it verbosely\r\n// previously directory component contains state, but i've moved it to redux\r\n// refactor this component to a functional component\r\n"]},"metadata":{},"sourceType":"module"}