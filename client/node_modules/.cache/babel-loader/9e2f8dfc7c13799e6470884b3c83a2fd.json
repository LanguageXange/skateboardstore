{"ast":null,"code":"import { createSelector } from \"reselect\"; //import memoize from \"lodash.memoize\";\n// const COLLECTION_ID_MAP = {\n//   skateboard: 1,\n//   longboard: 2,\n//   cruiser: 3,\n//   downhill: 4,\n//   outfit: 5,\n// };\n// for our collection category routing we need to map id to the collection string\n\nconst shopSelector = state => state.shop;\n\nexport const shopCollectionSelector = createSelector([shopSelector], shop => shop.collections); // since we've modified the shop.data.js to an object instead of an array\n// we need a new selector called CollectionPreviewSelector\n\nconst CollectionPreviewSelector = createSelector([shopCollectionSelector], collections => Object.keys(collections).map(key => collections[key]));\nexport default CollectionPreviewSelector; // export const cateCollectionSelector = (collectionUrlParam) =>\n//   createSelector([shopCollectionSelector], (collections) =>\n//     collections.find(\n//       (collection) => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n//     )\n//   );\n\nexport const cateCollectionSelector = collectionUrlParam => createSelector([shopCollectionSelector], collections => collections[collectionUrlParam]); // use memoize from lodash utility library to wrap the cateCollectionSelector","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/redux/shop/shop.selectors.js"],"names":["createSelector","shopSelector","state","shop","shopCollectionSelector","collections","CollectionPreviewSelector","Object","keys","map","key","cateCollectionSelector","collectionUrlParam"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAtC;;AAEA,OAAO,MAAMC,sBAAsB,GAAGJ,cAAc,CAClD,CAACC,YAAD,CADkD,EAEjDE,IAAD,IAAUA,IAAI,CAACE,WAFmC,CAA7C,C,CAKP;AACA;;AAEA,MAAMC,yBAAyB,GAAGN,cAAc,CAC9C,CAACI,sBAAD,CAD8C,EAE7CC,WAAD,IAAiBE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAF6B,CAAhD;AAIA,eAAeJ,yBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMK,sBAAsB,GAAIC,kBAAD,IACpCZ,cAAc,CACZ,CAACI,sBAAD,CADY,EAGXC,WAAD,IAAiBA,WAAW,CAACO,kBAAD,CAHhB,CADT,C,CAOP","sourcesContent":["import { createSelector } from \"reselect\";\r\n//import memoize from \"lodash.memoize\";\r\n// const COLLECTION_ID_MAP = {\r\n//   skateboard: 1,\r\n//   longboard: 2,\r\n//   cruiser: 3,\r\n//   downhill: 4,\r\n//   outfit: 5,\r\n// };\r\n\r\n// for our collection category routing we need to map id to the collection string\r\n\r\nconst shopSelector = (state) => state.shop;\r\n\r\nexport const shopCollectionSelector = createSelector(\r\n  [shopSelector],\r\n  (shop) => shop.collections\r\n);\r\n\r\n// since we've modified the shop.data.js to an object instead of an array\r\n// we need a new selector called CollectionPreviewSelector\r\n\r\nconst CollectionPreviewSelector = createSelector(\r\n  [shopCollectionSelector],\r\n  (collections) => Object.keys(collections).map((key) => collections[key])\r\n);\r\nexport default CollectionPreviewSelector;\r\n\r\n// export const cateCollectionSelector = (collectionUrlParam) =>\r\n//   createSelector([shopCollectionSelector], (collections) =>\r\n//     collections.find(\r\n//       (collection) => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\r\n//     )\r\n//   );\r\nexport const cateCollectionSelector = (collectionUrlParam) =>\r\n  createSelector(\r\n    [shopCollectionSelector],\r\n\r\n    (collections) => collections[collectionUrlParam]\r\n  );\r\n\r\n// use memoize from lodash utility library to wrap the cateCollectionSelector\r\n"]},"metadata":{},"sourceType":"module"}