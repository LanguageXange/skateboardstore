{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport rootSaga from \"../redux/root-saga\";\nimport logger from \"redux-logger\"; // logger is a middleware for debugging\n\nimport createSagaMiddleware from \"redux-saga\"; // replace thunk with saga to handle async events\n\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n} // only want logging in dev mode not in production mode\n\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares)); // spread the array of middlewares so that in the future just add more stuff into the middlewares array\n\nsagaMiddleware.run(rootSaga);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","rootSaga","logger","createSagaMiddleware","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AAEA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBR,MAAjB;AACD,C,CACD;;;AAEA,MAAMS,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CACA;;AAEAD,cAAc,CAACO,GAAf,CAAmBX,QAAnB;AAEA,MAAMY,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBE,SAAhB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootSaga from \"../redux/root-saga\";\r\n\r\nimport logger from \"redux-logger\";\r\n// logger is a middleware for debugging\r\n\r\nimport createSagaMiddleware from \"redux-saga\";\r\n// replace thunk with saga to handle async events\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n// only want logging in dev mode not in production mode\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n// spread the array of middlewares so that in the future just add more stuff into the middlewares array\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}