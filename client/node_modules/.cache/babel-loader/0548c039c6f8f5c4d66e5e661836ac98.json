{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cindy\\\\Desktop\\\\ecommerce\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"./redux/user/user.action\"; // adding action creator function , which simply returns the action object\n\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport \"./App.css\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-up/sign-in-up.component\";\nimport { auth, createUserProfile } from \"./firebase/firebase.utils\"; // dummy page for route practice\n\nconst Skateboard = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 26\n  }\n}, \"Skateboard...\"); // add connect & dispatch in app.js so we can remove constructor super and this.state\n\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  // we don't want to remount the component\n  // we just want the app to know that authentication state changes\n  // onAuthStateChanged is a firebase method\n  // userAuth is null when users sign out : setting by Firebase i guess\n  // Lesson-10 Titled: Storing User Data in App - review , a bit complicated\n  // TypeError - onSnapshot of undefined?? => solution delete collection sometimes work? delete users in authentication\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfile(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n          console.log(this.state);\n        });\n      } else {\n        // if user signs out userAuth will be null\n        setCurrentUser(userAuth);\n      } //console.log(userAuth);\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/skateboard\",\n      component: Skateboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  currentUser: user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // only the HomePage, ShopPage component has access to that specific Route props\n// place the Header Component outside of the Switch! so it will appear across the pages!\n// redirect users once they sign in, so we need the state, & redirect fromo react-router-dom\n// change to route from component to render","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/App.js"],"names":["React","Switch","Route","Redirect","connect","setCurrentUser","Homepage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfile","Skateboard","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","console","log","state","componentWillUnmount","render","currentUser","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"./redux/user/user.action\";\n// adding action creator function , which simply returns the action object\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport \"./App.css\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-up/sign-in-up.component\";\nimport { auth, createUserProfile } from \"./firebase/firebase.utils\";\n\n// dummy page for route practice\nconst Skateboard = () => <div>Skateboard...</div>;\n\n// add connect & dispatch in app.js so we can remove constructor super and this.state\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n  // we don't want to remount the component\n  // we just want the app to know that authentication state changes\n  // onAuthStateChanged is a firebase method\n  // userAuth is null when users sign out : setting by Firebase i guess\n  // Lesson-10 Titled: Storing User Data in App - review , a bit complicated\n  // TypeError - onSnapshot of undefined?? => solution delete collection sometimes work? delete users in authentication\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfile(userAuth);\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n\n          console.log(this.state);\n        });\n      } else {\n        // if user signs out userAuth will be null\n        setCurrentUser(userAuth);\n      }\n\n      //console.log(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route exact path=\"/shop\" component={ShopPage} />\n          <Route exact path=\"/skateboard\" component={Skateboard} />\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <SignInAndSignUpPage />\n              )\n            }\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// only the HomePage, ShopPage component has access to that specific Route props\n// place the Header Component outside of the Switch! so it will appear across the pages!\n// redirect users once they sign in, so we need the state, & redirect fromo react-router-dom\n// change to route from component to render\n"]},"metadata":{},"sourceType":"module"}