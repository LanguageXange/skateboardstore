{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types.js\"; // takeEvery creates non-blocking calls\n// saga use the keyword 'put' to dispatch action\n\nimport { firestore, convertSnapShotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionSuccess, fetchCollectionFail } from \"./shop.actions\";\nexport function* fetchCollectionAsync() {\n  //yield console.log(\"sagaaaa!!!!\");\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapShot = yield collectionRef.get();\n    const collectionMap = yield call(convertSnapShotToMap, snapShot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionFail(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/Cindy/Desktop/ecommerce/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertSnapShotToMap","fetchCollectionSuccess","fetchCollectionFail","fetchCollectionAsync","collectionRef","collection","snapShot","get","collectionMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,eAAP,MAA4B,iBAA5B,C,CACA;AACA;;AAEA,SAASC,SAAT,EAAoBC,oBAApB,QAAgD,+BAAhD;AACA,SAASC,sBAAT,EAAiCC,mBAAjC,QAA4D,gBAA5D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMZ,IAAI,CAACI,oBAAD,EAAuBM,QAAvB,CAAhC;AACA,UAAMT,GAAG,CAACI,sBAAsB,CAACO,aAAD,CAAvB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,mBAAmB,CAACO,KAAK,CAACC,OAAP,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMhB,SAAS,CACbG,eAAe,CAACc,uBADH,EAEbT,oBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport ShopActionTypes from \"./shop.types.js\";\r\n// takeEvery creates non-blocking calls\r\n// saga use the keyword 'put' to dispatch action\r\n\r\nimport { firestore, convertSnapShotToMap } from \"../../firebase/firebase.utils\";\r\nimport { fetchCollectionSuccess, fetchCollectionFail } from \"./shop.actions\";\r\n\r\nexport function* fetchCollectionAsync() {\r\n  //yield console.log(\"sagaaaa!!!!\");\r\n\r\n  try {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    const snapShot = yield collectionRef.get();\r\n    const collectionMap = yield call(convertSnapShotToMap, snapShot);\r\n    yield put(fetchCollectionSuccess(collectionMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionFail(error.message));\r\n  }\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}